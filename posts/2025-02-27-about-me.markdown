---
title: About myself
author: Brendon
---

Here I will discuss a little bit about myself. Like a lot of technical people,
I felt the pull to writing from reading how beneficial it can be to ones career,
but also just how powerful it can be as a tool for learning. Writing, to me, can
also be fun. I mean, it can also not be fun, but I'm really trying to channel
that fun right now.

In this initial post I'll share what my interests are, what my background is,
and some personal ambitions. I'll keep the scope of this post within my
professional qualities, but some of these topics can be a bit personal, too.
Hope you enjoy my ranting and please feel free to reach out with any opinions
of your own, corrections, or what-have-you.

# Background

I have worked mostly as a back-end software engineer making web applications my
whole career. With a little data engineering and business intelligence sprinkled
in here and there. These applications were often data-intensive, monolithic, or
distributed, systems in varying combinations. I don't really have a favorite
combination, to be frank. I'll work on any architecture so long as there's a
good team with good principles. One of my favorite teams was my first job as a
web developer right out of college, working on a LAMP stack. Sure, the tech
wasn't fancy, but we had fun.

<!--TODO: Link VTC here-->

Speaking of college, I completed my undergrad at a small, technical engineering
college in Vermont. From my hands-on experience there I have developed a very
pragmatic mindset when it comes to my approach to problem solving. I'm not very
keen on "the smartest solution". Usually, I'm for the "simplest solution".
Simple has served me well in my career. But maybe I also mean elegant? Borrowing
from Wikipedia, elegance is...

> In mathematical problem solving, the solution to a problem (such as a proof of
> a mathematical theorem) exhibits mathematical elegance if it is surprisingly
> simple and insightful yet effective and constructive.

I think that properly describes what I'm trying to say. Especially with
"effective and constructive".

Lastly, in college, I met a wonderful Math professor who taught me that math
could actually be a joy. Later in my career, a colleague introduced me to
Functional Programming. This was only briefly taught in college, or I wasn't yet
a mature enough programmer to appreciate it, but at both of these moments I fell
in love. It has been a huge personal interest of mine to learn the overlapping
between pure mathematics and functional programming. I guess this could be
described as applied mathematics for computer science, but I want to be specific
about Functional Programming and, say, Algebra, for example. The Curry Howard
Isomorphism is probably the coolest shit I've learned in recent time.

<!--TODO: Link Curry Howard Isomorphism-->

# Interests

So, I am continuously fascinated by the importance and impact mathematics has on
our level of human thought. I myself only have undergraduate training in math,
which includes what most software engineers would learn; calculus and discrete
mathematics. Nothing really at the formal level, although proofs were covered in
the discrete class. But it's these things, math and programming, that really
interest me.

At the moment I am in love with programming in Haskell. This language has
built-in abstractions from Abstract Algebra and Category Theory. You can
leverage these mathematical devices as tools for solving a problem. A very
interesting topic that I stumbled upon, for example, is Algebraic Path Finding.
A method for generalizing shortest path algorithms using Semirings. I am greatly
abbreviating the description, but I'll cover this topic in a later post some
time.

Finally, it's my great ambition to bring these interests into my day-to-day job
in enterprise-level software engineering. To develop hardened applications that
are correct in their nature, simple and elegant. Sure, I don't mind throwing my
typical Go hammer at any problem if something needs to get done. Engineering in
Go is great! Slap some SQLite or Postgres in there and we can get a lot done.
But I think it would be really, really cool to dive deeper into this world of
Algebra, Computation, and thought.

# Ambitions

It is my ambition to learn as much mathematics and functional programming as
possible without burning myself out. So, that's what I think I will write about
the most; things I am learning.

# Myself, about

One last addition before I wrap things up. I'd like to mention a few little
details about my preferred dev environment, especially because these are likely
to become future topics for posts. One thing is I use NeoVim, btw. I also am a
huge NixOS fan... btw. These two projects are great examples that allow me to
express the "hacker" in me. I'll discuss these things more in the future, but if
you'd like to check out some Nix and NeoVim related stuff I have, please see my
dotfiles repo, which is a nix flake using home-manager and configures Nixvim, a
nix-managed NeoVim.

Thanks for reading. Please feel free to reach out if you have any questions,
comments, or corrections by sending me a message through my contact page. Or by
filing a GitHub issue on this repository.

<!--TODO: Link dotfiles repo-->
